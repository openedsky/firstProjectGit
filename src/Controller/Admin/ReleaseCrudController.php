<?php

namespace App\Controller\Admin;

use App\Entity\Release;
use App\Entity\Slide;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Config\Filters;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\AssociationField;
use EasyCorp\Bundle\EasyAdminBundle\Field\BooleanField;
use EasyCorp\Bundle\EasyAdminBundle\Field\DateTimeField;
use EasyCorp\Bundle\EasyAdminBundle\Field\ImageField;
use EasyCorp\Bundle\EasyAdminBundle\Field\IntegerField;
use EasyCorp\Bundle\EasyAdminBundle\Field\SlugField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;
use EasyCorp\Bundle\EasyAdminBundle\Form\Type\FileUploadType;
use Symfony\Component\Form\Extension\Core\Type\FileType;

class ReleaseCrudController extends AbstractCrudController
{
    public static function getEntityFqcn(): string
    {
        return Release::class;
    }

    public function configureCrud(Crud $crud): Crud
    {
        return $crud
            ->setEntityLabelInSingular('Communiqué')
            ->setEntityLabelInPlural('Communiqués')
            ->setPageTitle(Crud::PAGE_INDEX, 'Liste des communiqués')
            ->setPageTitle(Crud::PAGE_EDIT, 'Modifier un communiqué')
            ->setPageTitle(Crud::PAGE_NEW, 'Ajouter un communiqué')
            ->setPageTitle(Crud::PAGE_DETAIL, 'Consulter un communiqué')
            ->setEntityPermission('ROLE_USER')
            ->setDefaultSort(['id' => 'DESC', 'title' => 'ASC', 'datePublished' => 'DESC'])
            ;
    }

    public function createEntity(string $entityFqcn)
    {
        $release = new Release();
        $release->setAuthor($this->getUser());
        $release->setDatePublished(new \DateTime());
        $release->setIsVisible(True);
        return $release;
    }


    public function configureFields(string $pageName): iterable
    {
        ImageField::new('fileDocument', 'Document PDF')->setFormType(FileType::class)
            ->setBasePath('docs');
        return [
            TextField::new('title', 'Titre'),
            SlugField::new("slug")->setTargetFieldName("title"),
            ImageField::new("file", 'Fichier')
                ->setBasePath('assets/uploads/releases')
                ->setUploadDir('public/assets/uploads/releases')
                ->setUploadedFileNamePattern('[randomhash].[extension]')
                ->setFormTypeOptions(['attr' => [
                    'accept' => 'application/pdf'
                ]
                ])
                ->setRequired(false),
            IntegerField::new('downloads', 'Nombre de téléchargements'),
            BooleanField::new("isVisible", 'Visible ?'),
            AssociationField::new('author', 'Auteur')->setDisabled(),
            DateTimeField::new('datePublished', 'Date de publication'),
        ];
    }

    public function configureFilters(Filters $filters): Filters
    {
        //return parent::configureFilters($filters); // TODO: Change the autogenerated stub
        return $filters
            ->add('datePublished')
            ->add('author')
            ->add('isVisible')
            ;
    }
}
